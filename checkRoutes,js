// ==========================================================
// üß† Histerese ERP - Verificador de Rotas
// ==========================================================
// Este script verifica todos os arquivos dentro de src/routes/
// e lista poss√≠veis problemas como:
// - controllers n√£o encontrados
// - fun√ß√µes ausentes (undefined)
// - erros de require ou export incorreto
// ==========================================================

const fs = require("fs");
const path = require("path");

const ROUTES_DIR = path.join(__dirname, "src", "routes");

console.log("üîç Verificando rotas em:", ROUTES_DIR);
console.log("===========================================");

function getAllRouteFiles(dir) {
    const entries = fs.readdirSync(dir, { withFileTypes: true });
    return entries.flatMap((entry) => {
        const fullPath = path.join(dir, entry.name);
        if (entry.isDirectory()) return getAllRouteFiles(fullPath);
        if (entry.isFile() && entry.name.endsWith(".js")) return fullPath;
        return [];
    });
}

const routeFiles = getAllRouteFiles(ROUTES_DIR);
if (routeFiles.length === 0) {
    console.log("‚ö†Ô∏è Nenhum arquivo de rota encontrado.");
    process.exit(0);
}

let totalErrors = 0;

for (const file of routeFiles) {
    console.log(`\nüìÅ ${path.basename(file)}:`);

    try {
        const router = require(file);

        if (typeof router !== "function" && typeof router.use !== "function") {
            console.log("  ‚ùå N√£o exporta um Router v√°lido (use module.exports = router)");
            totalErrors++;
            continue;
        }

        // Tentativa de inspe√ß√£o textual simples para capturar handlers quebrados
        const content = fs.readFileSync(file, "utf8");
        const invalidPatterns = content.match(/router\.\w+\([^)]*\)/g) || [];

        invalidPatterns.forEach((line) => {
            if (line.includes("undefined") || line.includes("null")) {
                console.log("  ‚ö†Ô∏è Poss√≠vel handler inv√°lido:", line.trim());
                totalErrors++;
            }
        });

        console.log("  ‚úÖ Estrutura b√°sica parece correta.");
    } catch (err) {
        console.log("  ‚ùå Erro ao importar:", err.message);
        totalErrors++;
    }
}

console.log("===========================================");
if (totalErrors === 0) {
    console.log("‚úÖ Nenhum problema encontrado nas rotas!");
} else {
    console.log(`‚ö†Ô∏è Total de poss√≠veis problemas: ${totalErrors}`);
}
console.log("===========================================");
