// ====================================================
// ðŸ’¾ ROTA DE BACKUP DO BANCO DE DADOS
// ====================================================
// Este mÃ³dulo define as rotas responsÃ¡veis por:
//   - GeraÃ§Ã£o de backup completo do banco (estrutura + dados)
//   - Download do arquivo .sql mais recente
//
// Requer autenticaÃ§Ã£o JWT para todas as rotas (proteÃ§Ã£o global)
//
// Estrutura de referÃªncia:
//   controllers/backupController.js
// ====================================================

const express = require("express");
const router = express.Router();
const { gerarBackup, downloadBackup } = require("../controllers/backupController");
const authMiddleware = require("../middlewares/authMiddleware");

// ====================================================
// ðŸ”’ Middleware global de autenticaÃ§Ã£o
// ====================================================
// Todas as rotas abaixo exigem token JWT vÃ¡lido
router.use(authMiddleware);

// ====================================================
// ðŸ“¦ GERA BACKUP MANUAL (pg_dump)
// ====================================================
// MÃ©todo: GET
// Endpoint: /api/backup
// Retorna um JSON com nome, caminho e status do backup
router.get("/", gerarBackup);

// ====================================================
// ðŸ“¥ DOWNLOAD DO BACKUP MAIS RECENTE (.sql)
// ====================================================
// MÃ©todo: GET
// Endpoint: /api/backup/download
// Envia o arquivo .sql mais recente para o cliente
router.get("/download", downloadBackup);

// ====================================================
// ðŸ“˜ EXPORTAÃ‡ÃƒO DO MÃ“DULO
// ====================================================
module.exports = router;
